08.12 bsslangic - 18.03 bitis - 8 mart sunum, 15 mart dosya teslim
fr39 haftalik faaliyet, 5 gun 5 satir 14 hafta - fr42 isyeri degerlendirme 7. ve 14. hafta - fr122 70 sayfa rapor.

- add error.ts files for fallback because even the panel errors fallback to the default root error page.
- add loading state for fetching data
- create an error dump file for production, for now it is console.error only. (implement winston, copilot helped)
  don't create anymore console.error, create logger.error after winston is ready.

-return error messages from server in Turkish, and display them in UI as a seperate text field.
 get rid of throw new Error() and change them to return; from functions instead.

header:
- fix the responsiveness and make the burger button work. Will need a drawer on small screens.
- why is onAuthStateChanged called 3 times on every useEffect execution?

panel:
- check if the container component causes the layout.tsx to be rendered on the client. (security risk)

actions:
- revise cookies, implement Throttling or Debouncing for abuse risk
- revise if any action should be called within a startTransition

token expiration:
- token expires when site is left for a while, so when admin panel is directly opened, it will first redirect to homepage and then refresh token.

loginpage:
- login page is reachable for logged in users, restrict it.

admin:

  courses:
  -add delete function but only allow it if it is not connected to a student schedule, consider making it 'legacy' if it is connected to a student schedule
  -consider adding server side props for initial courses state (route segment config on nextjs docs: getStaticProps equivalent of app router)
  -try with empty courses list for errors
  -sort by newest

  curriculums:
  -add delete function if there is no students, make it legacy if there are students
  -sort by newest and display whether legacy
  -add description to divide course name and curriculum date

  students:
  -send the email sign up link if did_register is false and email is edited (think more about it, what if student registers using the previous email link?)
  -show did_register in the Paper of each student
  -sort the students by newest
  -implement button to resend email sign up link (later if needed)

-incorporate useMemo, useCallback, React.memo, into existing code where needed.


