datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//note that this schema is defined in snake_case instead of the prisma default PascalCase

model users {
  id          Int                   @id @default(autoincrement())
  email       String                @unique @db.VarChar(150)
  first_name  String                @db.VarChar(100)
  last_name   String                @db.VarChar(100)
  created_at  DateTime              @default(now())
  role        roles                 @default(STUDENT)
  schedule    curriculum_schedules? @relation(fields: [schedule_id], references: [id])
  schedule_id Int?
}

enum roles {
  STUDENT
  ADMIN
}

model courses {
  id          Int                  @id @default(autoincrement())
  name        String               @db.VarChar(150)
  description String               @db.VarChar(500)
  legacy      Boolean              @default(false)
  curriculums course_curriculums[]
}

model course_curriculums {
  id         Int                    @id @default(autoincrement())
  created_at DateTime               @default(now())
  course     courses                @relation(fields: [course_id], references: [id])
  course_id  Int
  weeks      curriculum_weeks[]
  schedules  curriculum_schedules[]
}

model curriculum_weeks {
  id            Int                @id @default(autoincrement())
  week_no       Int
  description   String             @db.VarChar(500)
  curriculum    course_curriculums @relation(fields: [curriculum_id], references: [id])
  curriculum_id Int
}

//schedules are linked to curriculums instead of courses,
//because courses stay the same, but different schedules may have a new curriculum

model curriculum_schedules {
  id            Int                @id @default(autoincrement())
  begins_at     DateTime
  ends_at       DateTime
  curriculum    course_curriculums @relation(fields: [curriculum_id], references: [id])
  curriculum_id Int
  users         users[]
}

//schedule_files (todo)
//id
//week_no
//file_url
//schedule_id (foreign key)

//schedule_announcements? 
